<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	id="WebApp_ID" version="4.0">
	<display-name>07_spring_web</display-name>
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>default.htm</welcome-file>
	</welcome-file-list>
	<filter>
		<filter-name>filtro-admin</filter-name>
		<filter-class>filtros.FiltroAdmin</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>filtro-admin</filter-name>
		<url-pattern>/admin/*</url-pattern>
	</filter-mapping>
	<!-- Vamos a configurar un contenedor o contexto de spring para este proyecto 
		web -->

	<!-- esta es una forma de incorporar spring en web: -->
	<!-- 1ยบ traer las librerias -->
	<!-- 2ยบ incorporar lo siguiente en el web.xml -->
	<!-- en java web un listener es una clase que ejecuta cierto codigo cuando: 
		arranca la aplicacion, se para, y en otros momentos -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- si el archivo xml de spring se llama applicationContext.xml no tenemos 
		que hacer nada mas -->

</web-app>